name: Publish Python distribution to PyPI

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build distribution
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Install Poetry
        run: |
          pip install poetry==1.8.3

      - name: Install dependencies
        run: poetry install

      - name: Build distribution
        run: poetry build -f wheel

      - name: Store the distribution packages
        uses: actions/upload-artifact@v2
        with:
          name: python-package-distributions
          path: dist/

  publish-to-pypi:
    name: Publish Python distribution to PyPI
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v2
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: Sign the Python distribution with Sigstore and upload them to GitHub Release
    needs:
      - publish-to-pypi
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download all the dists
        uses: actions/download-artifact@v2
        with:
          name: python-package-distributions
          path: dist/

      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v1.2.3
        with:
          inputs: |
            ./dist/*.tar.gz
            ./dist/*.whl


      - name: Extract version from pyproject.toml
        id: extract-version
        run: |
          VERSION=$(yq eval '.tool.poetry.version' pyproject.toml)
          echo "version=${VERSION}" >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ steps.extract-version.outputs.version }} --repo '${{ github.repository }}' --notes ""

      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ steps.extract-version.outputs.version }} dist/** --repo '${{ github.repository }}'
